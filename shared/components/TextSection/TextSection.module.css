/**
 * TextSection Component Styles
 *
 * Provides styling for the TextSection component with support for three variants:
 * - text-only: Display columns with text content only
 * - with-icons: Display small icons beside text in each column
 * - with-images: Display larger images above text in each column
 *
 * Implements responsive grid layout that adapts to screen sizes
 */

/* Container for the entire text section */
.container {
  width: 100%;
  padding: 2rem 1rem;
}

/* Grid layout for columns - uses CSS Grid for flexible column arrangement */
.columnsGrid {
  display: grid;
  gap: 2rem;
  width: 100%;
  margin: 0 auto;
  max-width: 1200px;
}

/* Column count variations for desktop */
.columnsGrid[data-column-count='1'] {
  grid-template-columns: 1fr;
  max-width: 800px;
}

.columnsGrid[data-column-count='2'] {
  grid-template-columns: repeat(2, 1fr);
}

.columnsGrid[data-column-count='3'] {
  grid-template-columns: repeat(3, 1fr);
}

.columnsGrid[data-column-count='4'] {
  grid-template-columns: repeat(4, 1fr);
}

/* Individual column styling */
.column {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  min-width: 0; /* Prevent text overflow in grid */
}

/* Text content styling */
.columnText {
  margin: 0;
  line-height: 1.6;
  color: inherit;
  word-wrap: break-word;
  white-space: pre-wrap;
}

/* TEXT-ONLY VARIANT STYLES */
.textOnly .column {
  padding: 1rem;
}

/* WITH-ICONS VARIANT STYLES */
.withIcons .column {
  flex-direction: row;
  align-items: flex-start;
  gap: 1rem;
}

.iconWrapper {
  flex-shrink: 0;
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.icon {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.withIcons .columnContent {
  flex: 1;
  min-width: 0;
}

/* WITH-IMAGES VARIANT STYLES */
.withImages .column {
  flex-direction: column;
}

.imageWrapper {
  width: 100%;
  aspect-ratio: 16 / 9;
  overflow: hidden;
  border-radius: 0.5rem;
  background-color: #f3f4f6;
}

.image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

/* Lazy loading state for images */
.image[loading='lazy'] {
  background: linear-gradient(90deg, #f3f4f6 25%, #e5e7eb 50%, #f3f4f6 75%);
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
}

@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* LOADING STATE STYLES */
.loadingContainer {
  width: 100%;
  padding: 2rem 1rem;
}

.loadingGrid {
  display: grid;
  gap: 2rem;
  width: 100%;
  margin: 0 auto;
  max-width: 1200px;
}

.skeletonColumn {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.skeleton {
  background-color: #e5e7eb;
  border-radius: 0.375rem;
  position: relative;
  overflow: hidden;
}

.skeletonIcon {
  width: 48px;
  height: 48px;
  border-radius: 0.25rem;
}

.skeletonImage {
  width: 100%;
  aspect-ratio: 16 / 9;
  border-radius: 0.5rem;
}

.skeletonText {
  height: 4rem;
  width: 100%;
}

.shimmer {
  position: absolute;
  inset: 0;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.6) 50%,
    transparent 100%
  );
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* ERROR STATE STYLES */
.errorContainer {
  padding: 1.5rem;
  border-left: 4px solid #ef4444;
  background-color: #fef2f2;
  border-radius: 0.375rem;
  margin: 2rem auto;
  max-width: 600px;
}

.errorHeading {
  margin: 0 0 0.5rem 0;
  color: #dc2626;
  font-size: 1.125rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.errorIcon {
  font-size: 1.25em;
  color: #f59e0b;
}

.errorMessage {
  margin: 0;
  font-size: 0.875rem;
  color: #991b1b;
  line-height: 1.5;
}

/* EMPTY STATE STYLES */
.emptyState {
  padding: 3rem 1rem;
  text-align: center;
  color: #6b7280;
}

.emptyStateText {
  margin: 0;
  font-size: 1rem;
}

/* RESPONSIVE BREAKPOINTS */

/* Tablet (640px - 1024px) */
@media (max-width: 1024px) {
  .columnsGrid[data-column-count='3'],
  .columnsGrid[data-column-count='4'] {
    grid-template-columns: repeat(2, 1fr);
  }

  .loadingGrid[data-column-count='3'],
  .loadingGrid[data-column-count='4'] {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Mobile (<640px) */
@media (max-width: 640px) {
  .container {
    padding: 1.5rem 1rem;
  }

  .columnsGrid {
    grid-template-columns: 1fr !important;
    gap: 1.5rem;
  }

  .loadingGrid {
    grid-template-columns: 1fr !important;
    gap: 1.5rem;
  }

  .loadingContainer {
    padding: 1.5rem 1rem;
  }

  /* Stack icon layout on mobile for better readability */
  .withIcons .column {
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .iconWrapper {
    margin-bottom: 0.5rem;
  }

  .errorContainer {
    padding: 1rem;
    margin: 1rem;
  }

  .errorHeading {
    font-size: 1rem;
  }

  .errorMessage {
    font-size: 0.8125rem;
  }
}

/* Extra small screens (<480px) */
@media (max-width: 480px) {
  .container {
    padding: 1rem 0.75rem;
  }

  .columnsGrid,
  .loadingGrid {
    gap: 1.25rem;
  }

  .column {
    gap: 0.75rem;
  }

  .iconWrapper {
    width: 40px;
    height: 40px;
  }

  .columnText {
    font-size: 0.9375rem;
  }

  .emptyState {
    padding: 2rem 1rem;
  }
}
