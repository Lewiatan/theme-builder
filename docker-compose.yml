version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: theme-builder-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - theme-builder-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U builder"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin - Database Management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: theme-builder-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin-servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    networks:
      - theme-builder-network
    depends_on:
      - postgres

  # Backend - Symfony API (PHP-FPM)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: theme-builder-backend
    working_dir: /var/www/html
    environment:
      APP_ENV: ${APP_ENV}
      APP_SECRET: ${APP_SECRET}
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./backend:/var/www/html
    networks:
      - theme-builder-network
    depends_on:
      postgres:
        condition: service_healthy

  # Nginx - Web Server for Backend API
  nginx:
    image: nginx:alpine
    container_name: theme-builder-nginx
    volumes:
      - ./backend:/var/www/html
      - ./backend/docker/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80"
    networks:
      - theme-builder-network
    depends_on:
      - backend

  # Theme Builder - React + Vite Dev Server
  theme-builder:
    image: node:20-alpine
    container_name: theme-builder-app
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    environment:
      NODE_ENV: development
      VITE_API_URL: ${VITE_API_URL}
    volumes:
      - ./theme-builder:/app
    ports:
      - "5173:5173"
    networks:
      - theme-builder-network

  # Demo Shop - React Router + Vite Dev Server
  demo-shop:
    image: node:20-alpine
    container_name: theme-builder-demo-shop
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    environment:
      NODE_ENV: development
      VITE_API_URL: ${VITE_API_URL}
    volumes:
      - ./demo-shop:/app
    ports:
      - "5174:5174"
    networks:
      - theme-builder-network

networks:
  theme-builder-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  backend_vendor:
  theme_builder_node_modules:
  demo_shop_node_modules:
